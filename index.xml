<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fabrik</title>
    <link>https://fabrik.red/</link>
    <description>Recent content on fabrik</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright> </copyright>
    <lastBuildDate>Sun, 14 May 2017 15:29:59 +0200</lastBuildDate>
    
	<atom:link href="https://fabrik.red/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>test (install disk.raw)</title>
      <link>https://fabrik.red/post/test/</link>
      <pubDate>Sun, 14 May 2017 15:29:59 +0200</pubDate>
      
      <guid>https://fabrik.red/post/test/</guid>
      <description>Download the image: disk.tar.gz
The image works in AWS, GCE, and other providers that allow custom images like vultr.com, netcup, lunanode or locally by using VirtualBox
The advantage of using GCE google compute engine is that the image can be uploaded compressed tar.gz for other providers needs to be uncompressed and upload the plain 2GB disk.raw.
 Because of this the image is just created using 2GB and later needs to be expanded.</description>
    </item>
    
    <item>
      <title>Creating the image (disk.raw)</title>
      <link>https://fabrik.red/post/creating-the-image/</link>
      <pubDate>Sun, 07 May 2017 15:30:48 +0200</pubDate>
      
      <guid>https://fabrik.red/post/creating-the-image/</guid>
      <description>Creating the image (disk.raw) The fastest way of doing this (less than 1 hour) is to use AWS and chose the c4.8xlarge instance, at the moment of writhing this, is an instance with 36 vCPU / 60 RAM, the important thing to check for, is the amount of cores not really the memory. After finishing building, stop or terminate the build instance, mainly because is a very expensive instance and in best scenario you just want to do all this in less than 1 hour.</description>
    </item>
    
    <item>
      <title>Default username, password</title>
      <link>https://fabrik.red/post/default-user/</link>
      <pubDate>Sun, 07 May 2017 15:28:59 +0200</pubDate>
      
      <guid>https://fabrik.red/post/default-user/</guid>
      <description>devops is the only username created with password fabrik.
After verifying that image is booting, log in to the instance, change the password or configure ssh to only allow access by using ssh keys.
If using AWS or GCE the image will try to fetch the ssh public key on the firstboot, and add it to the ~/.ssh/authorized_keys file.
GCE For GCE this URL is used in gce_firstboot:
http://169.254.169.254/computeMetadata/v1/project/attributes/ssh-keys  More info can be found here: https://cloud.</description>
    </item>
    
    <item>
      <title>resize ZFS</title>
      <link>https://fabrik.red/post/zfs-resize/</link>
      <pubDate>Sun, 07 May 2017 10:16:17 +0200</pubDate>
      
      <guid>https://fabrik.red/post/zfs-resize/</guid>
      <description>The disk.raw automatically on the firstboot will try to resize the disk
 After booting the ZFS pool need to be increased:
$ gpart show da0  Example of output:
root@/:~ # gpart show =&amp;gt; 40 503316400 da0 GPT (240G) 40 1024 1 freebsd-boot (512K) 1064 2097152 2 freebsd-swap (1.0G) 2098216 984 - free - (492K) 2099200 2093056 3 freebsd-zfs (1.0G) 4192256 499124184 - free - (1.0M)  Then type gpart recover da0:</description>
    </item>
    
    <item>
      <title>After booting</title>
      <link>https://fabrik.red/post/after/</link>
      <pubDate>Fri, 05 May 2017 23:34:16 +0200</pubDate>
      
      <guid>https://fabrik.red/post/after/</guid>
      <description>The image is not tuned, and has only been configured to try boot in as many providers as possible, therefore extra adjustments need to be done after booting, starting by removing/changing the password for the user devops
In case not using GCE the mtu 1460 option may be removed from the rc.conf:
ifconfig_DEFAULT=&amp;quot;SYNCDHCP mtu 1460&amp;quot;  To:
ifconfig_DEFAULT=&amp;quot;SYNCDHCP&amp;quot;  The image has been build using this src.conf, this kernel and the jail using this src-jail.</description>
    </item>
    
    <item>
      <title>What is Fabrik</title>
      <link>https://fabrik.red/about/</link>
      <pubDate>Tue, 13 Dec 2016 09:51:11 +0100</pubDate>
      
      <guid>https://fabrik.red/about/</guid>
      <description>What is Fabrik ? For now is currently only a FreeBSD + ZFS on root raw image with a base jail, ready to work in AWS, GCE, etc.
Why ? Unfortunately, few know and are capable of taking advantage of all the benefits and capabilities available within FreeBSD + ZFS + jails. It is a fact that for having a proper setup some work needs to be done.
 you don&amp;rsquo;t get diamonds by just putting carbon in the microwave and wait for a couple of minutes.</description>
    </item>
    
  </channel>
</rss>